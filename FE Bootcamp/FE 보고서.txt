FE 보고서

SPA
유저는 10장의 화면을 서비스 받지만 하나의 메모리 안에서 js가 조작하는 html이 너무 많다.  = 렌더링 최적화
그래서 컴포넌트를 최대한 쪼개자.
= 첫페이지가 늦게뜰 수 밖에 없다 10개 중에 9개는 아직 안나오고 첫번째가 오래걸리면 다 같은 하나의 html임에도 불구하고 나머지 9개의 로딩을 지연시킨다 그러면 화면이 늦게 뜬다.

원래 html은 화면 전체를 렌더링 한다. 조그만한 부분이 바뀌더라도 전체 화면을 리렌더링 해야한다
리액트는 컴포넌트로 나누어서 컴포넌트만 리렌더링 가능하다. 메모리 적으로 이득.

CSR client side rendering 이 가지는 고유한 단점이 있고 그를 위해서는 SSR 서버사이드렌더링을 해야한다.
이렇게 얻는 이점은 (화면출력속도 + 검색엔진 노출) => next.js 

props를 사용하여 deep drilling을 사용해서 상위 하위간의 데이터 전달방법이 서로 강하게 연결되어있다 의존성 문제
최상위 부모 데이터를 수정할 경우 하위 데이터 모든 트리에게 props의 값이 전달되어야하는 문제가 있다. 트리구조가 커질수록 안좋다.

api = 껍데기

http://apis.data.go.kr/6260000/BusanCrsTrnngInfoService/getCrsTrnngInfo?ServiceKey=l3yf0gVaKs9evGlQxpYSqpELCb31FmCIkxbuLTYQdCxTfEbI2tGocF3T9y%2Bhtzubt%2B8Gh1Z9tgmsbHuMRNkw3Q%3D%3D&pageNo=1&numOfRows=10&resultType=json